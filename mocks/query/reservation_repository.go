// Code generated by MockGen. DO NOT EDIT.
// Source: internal/query/infraestructure/entrypoints/handlers/reservation_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	dto "reservation-api/internal/query/infraestructure/storage/dto"

	gomock "github.com/golang/mock/gomock"
)

// MockReservationRepository is a mock of ReservationRepository interface.
type MockReservationRepository struct {
	ctrl     *gomock.Controller
	recorder *MockReservationRepositoryMockRecorder
}

// MockReservationRepositoryMockRecorder is the mock recorder for MockReservationRepository.
type MockReservationRepositoryMockRecorder struct {
	mock *MockReservationRepository
}

// NewMockReservationRepository creates a new mock instance.
func NewMockReservationRepository(ctrl *gomock.Controller) *MockReservationRepository {
	mock := &MockReservationRepository{ctrl: ctrl}
	mock.recorder = &MockReservationRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReservationRepository) EXPECT() *MockReservationRepositoryMockRecorder {
	return m.recorder
}

// GetAllReservations mocks base method.
func (m *MockReservationRepository) GetAllReservations() ([]dto.Reservation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllReservations")
	ret0, _ := ret[0].([]dto.Reservation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllReservations indicates an expected call of GetAllReservations.
func (mr *MockReservationRepositoryMockRecorder) GetAllReservations() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllReservations", reflect.TypeOf((*MockReservationRepository)(nil).GetAllReservations))
}
